// Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
// All rights reserved.
//
// This software is distributed under a license that is described in
// the LICENSE file that accompanies it.
//
// Meridian is a registered trademark.
//////////////////////////////////////////////////////////////////////////////////
TosDeathArena is TosRoom

constants:

   include blakston.khd
   
   ENTRANCE_DOOR = 1
   ENTRANCE_DOOR_TIME = 10000

resources:

   include tosdeatharena.lkod

   room_tosdeatharena = tosarena_death.roo
   room_name_tosdeatharena = "The Arena of Death"
   tosdeatharena_music = nec02.ogg
   
   Death_Arena_door_open_sound = doordown.ogg
   Death_Arena_door_close_sound = doorrsup.ogg

classvars:

   vrName = room_name_tosdeatharena

   viTeleport_Row = 15
   viTeleport_Col = 24

   viTerrain_type = TERRAIN_CITY | TERRAIN_RESIDENCE

properties:

   prRoom = room_tosdeatharena
   piRoom_num = RID_TOS_DEATH_ARENA
   prMusic = tosdeatharena_music

   piBaseLight = LIGHT_NICE
   piOutside_factor = 0
   
   ptDoorTimer = $

messages:
 SomethingTryGo(what = $,row = $,col = $)
   {
      // Entrance Door to the Death Arena (cosmetic)
      if row >= 9 AND row <= 11 AND col >= 22 AND col <= 25
      {
         Send(self,@SetSector,#sector=ENTRANCE_DOOR,#animation=ANIMATE_FLOOR_LIFT,
              #height=120,#speed=16);
         Send(self,@SomethingWaveRoom,#wave_rsc=Death_Arena_door_open_sound);
         ptDoorTimer = CreateTimer(self,@ResetDoorTimer,ENTRANCE_DOOR_TIME);

         return TRUE;
      }

      propagate;
   }

 ResetDoorTimer()
   {
      ptDoorTimer = $;

      Send(self,@SetSector,#sector=ENTRANCE_DOOR,#animation=ANIMATE_FLOOR_LIFT,
           #height=200,#speed=16);
      Send(self,@SomethingWaveRoom,#wave_rsc=Death_Arena_door_close_sound);

      return;
   }

   Delete()
   {
      if (ptDoorTimer <> $)
      {
         DeleteTimer(ptDoorTimer);
         ptDoorTimer = $;
      }

      propagate;
   }

    CreateStandardObjects()
   {
      local lObjCoords1;

      lObjCoords1 = [ [8,22,17,11,OO_ALTAR], [24,15,60,50,OO_BIG_BAG],
                      [24,7,60,34,OO_BASKET], [24,8,60,42,OO_BAG_OF_BEANS],
                      [24,9,60,47,OO_APPLE], [24,12,60,57,OO_BROWN_URN],
                      [22,6,50,21,OO_BLUE_BOTTLE], [22,8,50,17,OO_BLUE_BOTTLE],
                      [22,11,50,13,OO_BLUE_BOTTLE], [22,14,50,14,OO_BLUE_BOTTLE],
                      [22,5,50,57,OO_GREY_JUG], [22,16,50,0,OO_GREY_JUG],
                      [22,10,50,9,OO_SPICES], [22,14,50,51,OO_SPICES],
                      [22,16,50,15,OO_MUGS], [24,10,60,16,OO_BROWN_URN],
                      [17,20,40,57,OO_SKULL5], [14,20,25,60,OO_SKULL5],
                      [7,1,61,26,OO_SKULL5], [10,1,25,25,OO_SKULL3],
                      [15,1,25,25,OO_SKULL3], [23,3,0,23,OO_SKULL3],
                      [12,20,13,60,OO_SKULL3], [8,20,39,60,OO_SKULL3],
                      [19,24,26,26,OO_SKULL3]
                    ];

      Send(self,@CreateOrnObjFromList,#lObjlist=lObjCoords1);

      Send(self,@NewHold,#what=Create(&KocatanLamp),#new_row=17,#new_col=23,
            #fine_row=35,#fine_col=0);
      Send(self,@NewHold,#what=Create(&OrcTorch),#new_row=21,#new_col=20,
            #fine_row=46,#fine_col=15);
      Send(self,@NewHold,#what=Create(&OrcTorch),#new_row=23,#new_col=18,
            #fine_row=3,#fine_col=56);
      Send(self,@NewHold,#what=Create(&Tombstone),#new_row=20,#new_col=19,
            #fine_row=27,#fine_col=16,#new_angle=ANGLE_NORTH);
      Send(self,@NewHold,#what=Create(&Tombstone),#new_row=21,#new_col=18,
            #fine_row=29,#fine_col=16,#new_angle=ANGLE_NORTH);
      Send(self,@NewHold,#what=Create(&Quillpen),#new_row=17,#new_col=23,
            #fine_row=35,#fine_col=47);

      Send(self,@NewHold,#what=Create(&SkullBrazier),#new_row=6,#new_col=22,
            #fine_row=57,#fine_col=9);
      Send(self,@NewHold,#what=Create(&SkullBrazier),#new_row=9,#new_col=22,
            #fine_row=42,#fine_col=9);
      Send(self,@NewHold,#what=Create(&SkullBrazier),#new_row=16,#new_col=24,
            #fine_row=58,#fine_col=58);
      Send(self,@NewHold,#what=Create(&SkullBrazier),#new_row=19,#new_col=20,
            #fine_row=42,#fine_col=58);
      Send(self,@NewHold,#what=Create(&SkullBrazier),#new_row=24,#new_col=16,
            #fine_row=58,#fine_col=47);
      Send(self,@NewHold,#what=Create(&SkullBrazier),#new_row=6,#new_col=20,
            #fine_row=15,#fine_col=57);
      Send(self,@NewHold,#what=Create(&SkullBrazier),#new_row=21,#new_col=1,
            #fine_row=4,#fine_col=26);
      Send(self,@NewHold,#what=Create(&SkullBrazier),#new_row=6,#new_col=1,
            #fine_row=18,#fine_col=25);

      Send(self,@NewHold,#what=Create(&BarStool),
           #new_row=22,#new_col=6,#fine_row=20,#fine_col=35);
      Send(self,@NewHold,#what=Create(&BarStool),
           #new_row=22,#new_col=7,#fine_row=20,#fine_col=61);
      Send(self,@NewHold,#what=Create(&BarStool),
           #new_row=22,#new_col=9,#fine_row=20,#fine_col=20);
      Send(self,@NewHold,#what=Create(&BarStool),
           #new_row=22,#new_col=10,#fine_row=20,#fine_col=37);
      Send(self,@NewHold,#what=Create(&BarStool),
           #new_row=22,#new_col=12,#fine_row=20,#fine_col=8);
      Send(self,@NewHold,#what=Create(&BarStool),
           #new_row=22,#new_col=13,#fine_row=20,#fine_col=30);
      Send(self,@NewHold,#what=Create(&BarStool),
           #new_row=22,#new_col=14,#fine_row=20,#fine_col=53);
      propagate;
   }

   
   CreateStandardExits()
   {
      plExits = $;

      // exits back to tos
      plExits = Cons([  7, 25, RID_EAST_TOS,  29, 52, ROTATE_NONE ],plExits);
      plExits = Cons([  8, 25, RID_EAST_TOS,  29, 52, ROTATE_NONE ],plExits);

      propagate;
   }

end
////////////////////////////////////////////////////////////////////////////////
